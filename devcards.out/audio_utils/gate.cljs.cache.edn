;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name audio-utils.gate, :imports nil, :requires {rb audio-utils.ring-buffer, audio-utils.ring-buffer audio-utils.ring-buffer, rms audio-utils.rms-buffer, audio-utils.rms-buffer audio-utils.rms-buffer, audio-utils.util audio-utils.util, w audio-utils.worker, audio-utils.worker audio-utils.worker}, :uses {db->amplitude audio-utils.util, >> audio-utils.util, time->samples audio-utils.util, aswap! audio-utils.util, aatom audio-utils.util, << audio-utils.util}, :defs {IGate {:meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :line 23, :column 14, :end-line 23, :end-column 19, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {generate-output-sample [[this channel input-sample]], add-to-rms [[this channel sample]], calculate-rms [[this channel]], queue-in-buffer [[this channel sample]], dequeue-from-buffer [[this channel]]}}}, :protocol-symbol true, :name audio-utils.gate/IGate, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :end-column 19, :column 1, :line 23, :protocol-info {:methods {generate-output-sample [[this channel input-sample]], add-to-rms [[this channel sample]], calculate-rms [[this channel]], queue-in-buffer [[this channel sample]], dequeue-from-buffer [[this channel]]}}, :info nil, :end-line 23, :impls #{audio-utils.gate/Gate}, :doc nil, :jsdoc ("@interface")}, dequeue-from-buffer {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :line 28, :column 4, :end-line 28, :end-column 23, :protocol audio-utils.gate/IGate, :doc nil, :arglists (quote ([this channel]))}, :protocol audio-utils.gate/IGate, :name audio-utils.gate/dequeue-from-buffer, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :end-column 23, :method-params ([this channel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this channel])), :doc nil}, Gate {:num-fields 5, :protocols #{cljs.core/IRecord audio-utils.gate/IGate cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection audio-utils.worker/IWorkerAudioNode cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name audio-utils.gate/Gate, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :end-column 16, :type true, :column 12, :internal-ctor true, :line 30, :record true, :end-line 30, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, calculate-rms {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :line 26, :column 4, :end-line 26, :end-column 17, :protocol audio-utils.gate/IGate, :doc nil, :arglists (quote ([this channel]))}, :protocol audio-utils.gate/IGate, :name audio-utils.gate/calculate-rms, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :end-column 17, :method-params ([this channel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this channel])), :doc nil}, queue-in-buffer {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :line 27, :column 4, :end-line 27, :end-column 19, :protocol audio-utils.gate/IGate, :doc nil, :arglists (quote ([this channel sample]))}, :protocol audio-utils.gate/IGate, :name audio-utils.gate/queue-in-buffer, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :end-column 19, :method-params ([this channel sample]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 27, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this channel sample])), :doc nil}, ->Gate {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :line 30, :column 12, :end-line 30, :end-column 16, :internal-ctor true, :factory :positional, :arglists (quote ([config next buffers rms-buffers samples-held]))}, :name audio-utils.gate/->Gate, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :end-column 16, :method-params ([config next buffers rms-buffers samples-held]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 30, :end-line 30, :max-fixed-arity 5, :fn-var true, :arglists (quote ([config next buffers rms-buffers samples-held]))}, map->Gate {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :line 30, :column 12, :end-line 30, :end-column 16, :internal-ctor true, :factory :map, :arglists (quote ([G__23848]))}, :name audio-utils.gate/map->Gate, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :end-column 16, :method-params ([G__23848]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__23848]))}, default-trigger {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :line 91, :column 7, :end-line 91, :end-column 22, :arglists (quote ([gate state]))}, :name audio-utils.gate/default-trigger, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :end-column 22, :method-params ([gate state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gate state]))}, generate-output-sample {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :line 24, :column 4, :end-line 24, :end-column 26, :protocol audio-utils.gate/IGate, :doc nil, :arglists (quote ([this channel input-sample]))}, :protocol audio-utils.gate/IGate, :name audio-utils.gate/generate-output-sample, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :end-column 26, :method-params ([this channel input-sample]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 24, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this channel input-sample])), :doc nil}, add-to-rms {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :line 25, :column 4, :end-line 25, :end-column 14, :protocol audio-utils.gate/IGate, :doc nil, :arglists (quote ([this channel sample]))}, :protocol audio-utils.gate/IGate, :name audio-utils.gate/add-to-rms, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :end-column 14, :method-params ([this channel sample]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 25, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this channel sample])), :doc nil}, gate {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :line 94, :column 7, :end-line 94, :end-column 11, :arglists (quote ([{:keys [sample-rate buffer-size threshold look-ahead hold rms-window trigger], :or {buffer-size 4096, threshold -32.0, look-ahead 500, hold 100, rms-window 100, trigger default-trigger}}]))}, :name audio-utils.gate/gate, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/gate.cljs", :end-column 11, :method-params ([p__23914]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [sample-rate buffer-size threshold look-ahead hold rms-window trigger], :or {buffer-size 4096, threshold -32.0, look-ahead 500, hold 100, rms-window 100, trigger default-trigger}}]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:buffer-size :look-ahead :sample-rate :config :hold config :threshold :rms-buffers :next :buffers :samples-held rms-buffers next :trigger :rms-window buffers samples-held}, :order [:threshold :hold :sample-rate :rms-window :look-ahead :config :next :buffers :rms-buffers :samples-held config next buffers rms-buffers samples-held :buffer-size :trigger]}, :doc nil}