;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name audio-utils.rms-buffer, :imports nil, :requires {rb audio-utils.ring-buffer, audio-utils.ring-buffer audio-utils.ring-buffer}, :uses nil, :defs {IRMSBuffer {:meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/rms_buffer.cljs", :line 4, :column 14, :end-line 4, :end-column 24, :doc "Interface for implementations of RMS volume computation buffers.", :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {rms-push [[this sample]], rms-push-many [[this samples]], rms [[this]]}}}, :protocol-symbol true, :name audio-utils.rms-buffer/IRMSBuffer, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/rms_buffer.cljs", :end-column 24, :column 1, :line 4, :protocol-info {:methods {rms-push [[this sample]], rms-push-many [[this samples]], rms [[this]]}}, :info nil, :end-line 4, :impls #{audio-utils.rms-buffer/RMSBuffer}, :doc "Interface for implementations of RMS volume computation buffers.", :jsdoc ("@interface")}, rms-push {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/rms_buffer.cljs", :line 6, :column 4, :end-line 6, :end-column 12, :protocol audio-utils.rms-buffer/IRMSBuffer, :doc "Adds a single sample to the RMS buffer", :arglists (quote ([this sample]))}, :protocol audio-utils.rms-buffer/IRMSBuffer, :name audio-utils.rms-buffer/rms-push, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/rms_buffer.cljs", :end-column 12, :method-params ([this sample]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this sample])), :doc "Adds a single sample to the RMS buffer"}, rms-push-many {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/rms_buffer.cljs", :line 7, :column 4, :end-line 7, :end-column 17, :protocol audio-utils.rms-buffer/IRMSBuffer, :doc "Adds many samples to the RMS buffer", :arglists (quote ([this samples]))}, :protocol audio-utils.rms-buffer/IRMSBuffer, :name audio-utils.rms-buffer/rms-push-many, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/rms_buffer.cljs", :end-column 17, :method-params ([this samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this samples])), :doc "Adds many samples to the RMS buffer"}, rms {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/rms_buffer.cljs", :line 8, :column 4, :end-line 8, :end-column 7, :protocol audio-utils.rms-buffer/IRMSBuffer, :doc "Computes the RMS volume level based on\n                                 the samples in the buffer", :arglists (quote ([this]))}, :protocol audio-utils.rms-buffer/IRMSBuffer, :name audio-utils.rms-buffer/rms, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/rms_buffer.cljs", :end-column 7, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Computes the RMS volume level based on\n                                 the samples in the buffer"}, RMSBuffer {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable audio-utils.rms-buffer/IRMSBuffer cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name audio-utils.rms-buffer/RMSBuffer, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/rms_buffer.cljs", :end-column 21, :type true, :column 12, :internal-ctor true, :line 11, :record true, :end-line 11, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->RMSBuffer {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/rms_buffer.cljs", :line 11, :column 12, :end-line 11, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([size samples squared-sum]))}, :name audio-utils.rms-buffer/->RMSBuffer, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/rms_buffer.cljs", :end-column 21, :method-params ([size samples squared-sum]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 11, :end-line 11, :max-fixed-arity 3, :fn-var true, :arglists (quote ([size samples squared-sum]))}, map->RMSBuffer {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/rms_buffer.cljs", :line 11, :column 12, :end-line 11, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__21150]))}, :name audio-utils.rms-buffer/map->RMSBuffer, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/rms_buffer.cljs", :end-column 21, :method-params ([G__21150]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__21150]))}, rms-buffer {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/rms_buffer.cljs", :line 50, :column 7, :end-line 50, :end-column 17, :arglists (quote ([size])), :doc "Allocates a new buffer for RMS computations"}, :name audio-utils.rms-buffer/rms-buffer, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/rms_buffer.cljs", :end-column 17, :method-params ([size]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size])), :doc "Allocates a new buffer for RMS computations"}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:samples samples :squared-sum :size squared-sum size}, :order [:size :samples :squared-sum size samples squared-sum]}, :doc nil}