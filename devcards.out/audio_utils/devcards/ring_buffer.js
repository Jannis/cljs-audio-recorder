// Compiled by ClojureScript 1.7.228 {}
goog.provide('audio_utils.devcards.ring_buffer');
goog.require('cljs.core');
goog.require('devcards.core');
goog.require('audio_utils.ring_buffer');
goog.require('audio_utils.viz');
devcards.core.register_card.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"audio_utils.devcards.ring_buffer","audio_utils.devcards.ring_buffer",948653),new cljs.core.Keyword(null,"card","card",-1430355152)], null),new cljs.core.Keyword(null,"func","func",-238706040),(function (){
return devcards.core.card_base.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"name","name",1843675177),"card",new cljs.core.Keyword(null,"documentation","documentation",1889593999),"100 zeroes in a ring buffer of size 100. Taking 100 values\n   out of it results in 100 values of 0.0.",new cljs.core.Keyword(null,"main-obj","main-obj",-1544409742),(function (){var data = cljs.core.repeat.call(null,(100),0.0);
return audio_utils.viz.plot_buffers.call(null,(100),(25),"Expected",data,"Actual",cljs.core.into.call(null,audio_utils.ring_buffer.ring_buffer.call(null,(100)),data));
})(),new cljs.core.Keyword(null,"initial-data","initial-data",-1315709804),null,new cljs.core.Keyword(null,"options","options",99638489),cljs.core.merge.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"heading","heading",-1312171873),false], null),devcards.core.assert_options_map.call(null,null))], null));
})], null));
devcards.core.register_card.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"audio_utils.devcards.ring_buffer","audio_utils.devcards.ring_buffer",948653),new cljs.core.Keyword(null,"card","card",-1430355152)], null),new cljs.core.Keyword(null,"func","func",-238706040),(function (){
return devcards.core.card_base.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"name","name",1843675177),"card",new cljs.core.Keyword(null,"documentation","documentation",1889593999),"100 zeroes in a ring buffer of size 100. Taking 200 values\n   out of it results in 100 values of 0.0, followed by 100\n   nils.",new cljs.core.Keyword(null,"main-obj","main-obj",-1544409742),(function (){var data = cljs.core.repeat.call(null,(100),0.0);
return audio_utils.viz.plot_buffers.call(null,(200),(25),"Expected",data,"Actual",cljs.core.into.call(null,audio_utils.ring_buffer.ring_buffer.call(null,(100)),data));
})(),new cljs.core.Keyword(null,"initial-data","initial-data",-1315709804),null,new cljs.core.Keyword(null,"options","options",99638489),cljs.core.merge.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"heading","heading",-1312171873),false], null),devcards.core.assert_options_map.call(null,null))], null));
})], null));
devcards.core.register_card.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"audio_utils.devcards.ring_buffer","audio_utils.devcards.ring_buffer",948653),new cljs.core.Keyword(null,"card","card",-1430355152)], null),new cljs.core.Keyword(null,"func","func",-238706040),(function (){
return devcards.core.card_base.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"name","name",1843675177),"card",new cljs.core.Keyword(null,"documentation","documentation",1889593999),"100 zeroes and 100 ones in a ring buffer of size 100.\n   Taking 100 values out of results in 100 values of 1.0.",new cljs.core.Keyword(null,"main-obj","main-obj",-1544409742),(function (){var data = cljs.core.concat.call(null,cljs.core.repeat.call(null,(100),0.0),cljs.core.repeat.call(null,(100),1.0));
return audio_utils.viz.plot_buffers.call(null,(100),(25),"Expected",cljs.core.drop.call(null,(100),data),"Actual",cljs.core.into.call(null,audio_utils.ring_buffer.ring_buffer.call(null,(100)),data));
})(),new cljs.core.Keyword(null,"initial-data","initial-data",-1315709804),null,new cljs.core.Keyword(null,"options","options",99638489),cljs.core.merge.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"heading","heading",-1312171873),false], null),devcards.core.assert_options_map.call(null,null))], null));
})], null));
devcards.core.register_card.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"audio_utils.devcards.ring_buffer","audio_utils.devcards.ring_buffer",948653),new cljs.core.Keyword(null,"card","card",-1430355152)], null),new cljs.core.Keyword(null,"func","func",-238706040),(function (){
return devcards.core.card_base.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"name","name",1843675177),"card",new cljs.core.Keyword(null,"documentation","documentation",1889593999),"100 values linearly distributed between -1.0 and 1.0\n   in ring buffer of size 100. Taking 10 values out of\n   it results in 10 values starting at -1.0.",new cljs.core.Keyword(null,"main-obj","main-obj",-1544409742),(function (){var data = audio_utils.viz.linear_distribution.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1.0,1.0], null),(100));
return audio_utils.viz.plot_buffers.call(null,(10),(5),"Expected",cljs.core.take.call(null,(10),data),"Actual",cljs.core.into.call(null,audio_utils.ring_buffer.ring_buffer.call(null,(100)),data));
})(),new cljs.core.Keyword(null,"initial-data","initial-data",-1315709804),null,new cljs.core.Keyword(null,"options","options",99638489),cljs.core.merge.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"heading","heading",-1312171873),false], null),devcards.core.assert_options_map.call(null,null))], null));
})], null));
devcards.core.register_card.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"audio_utils.devcards.ring_buffer","audio_utils.devcards.ring_buffer",948653),new cljs.core.Keyword(null,"card","card",-1430355152)], null),new cljs.core.Keyword(null,"func","func",-238706040),(function (){
return devcards.core.card_base.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"name","name",1843675177),"card",new cljs.core.Keyword(null,"documentation","documentation",1889593999),"100 values linearly distributed between -1.0 and 1.0\n   in ring buffer of size 100. Taking 100 values out of\n   it results in 100 values from -1.0 to 1.0.",new cljs.core.Keyword(null,"main-obj","main-obj",-1544409742),(function (){var data = audio_utils.viz.linear_distribution.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1.0,1.0], null),(100));
return audio_utils.viz.plot_buffers.call(null,(100),(25),"Expected",cljs.core.take.call(null,(100),data),"Actual",cljs.core.into.call(null,audio_utils.ring_buffer.ring_buffer.call(null,(100)),data));
})(),new cljs.core.Keyword(null,"initial-data","initial-data",-1315709804),null,new cljs.core.Keyword(null,"options","options",99638489),cljs.core.merge.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"heading","heading",-1312171873),false], null),devcards.core.assert_options_map.call(null,null))], null));
})], null));
devcards.core.register_card.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"audio_utils.devcards.ring_buffer","audio_utils.devcards.ring_buffer",948653),new cljs.core.Keyword(null,"card","card",-1430355152)], null),new cljs.core.Keyword(null,"func","func",-238706040),(function (){
return devcards.core.card_base.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"name","name",1843675177),"card",new cljs.core.Keyword(null,"documentation","documentation",1889593999),"100 values linearly distributed between -1.0 and 1.0\n   in ring buffer of size 100. Taking 200 values out of\n   it results in 100 values from -1.0 and 1.0, followed\n   by 100 nils.",new cljs.core.Keyword(null,"main-obj","main-obj",-1544409742),(function (){var data = audio_utils.viz.linear_distribution.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1.0,1.0], null),(100));
return audio_utils.viz.plot_buffers.call(null,(200),(25),"Expected",cljs.core.take.call(null,(100),data),"Actual",cljs.core.into.call(null,audio_utils.ring_buffer.ring_buffer.call(null,(100)),data));
})(),new cljs.core.Keyword(null,"initial-data","initial-data",-1315709804),null,new cljs.core.Keyword(null,"options","options",99638489),cljs.core.merge.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"heading","heading",-1312171873),false], null),devcards.core.assert_options_map.call(null,null))], null));
})], null));
devcards.core.register_card.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"audio_utils.devcards.ring_buffer","audio_utils.devcards.ring_buffer",948653),new cljs.core.Keyword(null,"card","card",-1430355152)], null),new cljs.core.Keyword(null,"func","func",-238706040),(function (){
return devcards.core.card_base.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"name","name",1843675177),"card",new cljs.core.Keyword(null,"documentation","documentation",1889593999),"200 values linearly distributed between -1.0 and 1.0\n   in ring buffer of size 100. Adding the 200 values into\n   the smaller buffer means that the first 100 values from\n   -1.0 to 0.0 are replaced with the second 100 values from\n   0.0 to 1.0. Taking 200 values out results in 100 values\n   from 0.0 to 1.0, followed by 100 nils.",new cljs.core.Keyword(null,"main-obj","main-obj",-1544409742),(function (){var data = audio_utils.viz.linear_distribution.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1.0,1.0], null),(200));
return audio_utils.viz.plot_buffers.call(null,(200),(25),"Expected",cljs.core.drop.call(null,(100),data),"Actual",cljs.core.into.call(null,audio_utils.ring_buffer.ring_buffer.call(null,(100)),data));
})(),new cljs.core.Keyword(null,"initial-data","initial-data",-1315709804),null,new cljs.core.Keyword(null,"options","options",99638489),cljs.core.merge.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"heading","heading",-1312171873),false], null),devcards.core.assert_options_map.call(null,null))], null));
})], null));
devcards.core.register_card.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"path","path",-188191168),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"audio_utils.devcards.ring_buffer","audio_utils.devcards.ring_buffer",948653),new cljs.core.Keyword(null,"card","card",-1430355152)], null),new cljs.core.Keyword(null,"func","func",-238706040),(function (){
return devcards.core.card_base.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"name","name",1843675177),"card",new cljs.core.Keyword(null,"documentation","documentation",1889593999),"300 values linearly distributed between -1.0 and 1.0\n   in ring buffer of size 100. Adding the 300 values into\n   the smaller buffer means that the first 100 values from\n   -1.0 to -0.33 are replaced with the second 100 values from\n   -0.33 to 0.33 and then replaced with the third 100 values\n   from 0.33 to 1.0. Taking 200 values out results in 100\n   values from 0.33 to 1.0, followed by 100 nils.",new cljs.core.Keyword(null,"main-obj","main-obj",-1544409742),(function (){var data = audio_utils.viz.linear_distribution.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1.0,1.0], null),(300));
return audio_utils.viz.plot_buffers.call(null,(200),(25),"Expected",cljs.core.drop.call(null,(200),data),"Actual",cljs.core.into.call(null,audio_utils.ring_buffer.ring_buffer.call(null,(100)),data));
})(),new cljs.core.Keyword(null,"initial-data","initial-data",-1315709804),null,new cljs.core.Keyword(null,"options","options",99638489),cljs.core.merge.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"heading","heading",-1312171873),false], null),devcards.core.assert_options_map.call(null,null))], null));
})], null));

//# sourceMappingURL=ring_buffer.js.map