;; Analyzed by ClojureScript 1.7.228
{:use-macros {deftest devcards.core, dom-node devcards.core, defcard devcards.core}, :excludes #{}, :name audio-utils.devcards.rms-buffer, :imports nil, :requires {devcards.core devcards.core, rms audio-utils.rms-buffer, audio-utils.rms-buffer audio-utils.rms-buffer, audio-utils.viz audio-utils.viz}, :uses {plot-buffers audio-utils.viz, rms-buffer audio-utils.rms-buffer, linear-distribution audio-utils.viz, sine-wave audio-utils.viz}, :defs {run-rms {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-grrwi1/audio_utils/devcards/rms_buffer.cljs", :line 7, :column 7, :end-line 7, :end-column 14, :arglists (quote ([rms-size samples]))}, :name audio-utils.devcards.rms-buffer/run-rms, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-grrwi1/audio_utils/devcards/rms_buffer.cljs", :end-column 14, :method-params ([rms-size samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rms-size samples]))}, compute-rms-values {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-grrwi1/audio_utils/devcards/rms_buffer.cljs", :line 21, :column 7, :end-line 21, :end-column 25, :arglists (quote ([rms-size samples]))}, :name audio-utils.devcards.rms-buffer/compute-rms-values, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-grrwi1/audio_utils/devcards/rms_buffer.cljs", :end-column 25, :method-params ([rms-size samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rms-size samples]))}, compute-rms-samples {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-grrwi1/audio_utils/devcards/rms_buffer.cljs", :line 25, :column 7, :end-line 25, :end-column 26, :arglists (quote ([rms-size samples]))}, :name audio-utils.devcards.rms-buffer/compute-rms-samples, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-grrwi1/audio_utils/devcards/rms_buffer.cljs", :end-column 26, :method-params ([rms-size samples]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rms-size samples]))}}, :require-macros {devcards.core devcards.core}, :cljs.analyzer/constants {:seen #{:path :samples :func :name :documentation :card :main-obj :initial-data :rms-values :options :audio_utils.devcards.rms_buffer :rms-buf :rms-samples :heading}, :order [:rms-buf :rms-values :rms-samples :samples :path :func :audio_utils.devcards.rms_buffer :card :name :documentation :main-obj :initial-data :options :heading]}, :doc nil}