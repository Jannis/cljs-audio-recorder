;; Analyzed by ClojureScript 1.7.228
{:use-macros {html sablono.core, go cljs.core.async.macros, deftest devcards.core, dom-node devcards.core, defcard devcards.core}, :excludes #{}, :name audio-utils.devcards.chunker, :imports nil, :requires {audio-utils.worker audio-utils.worker, audio-utils.chunker audio-utils.chunker, gstring goog.string, devcards.core devcards.core, a audio-utils.web-audio, audio-utils.viz audio-utils.viz, goog.string goog.string, cljs.core.async cljs.core.async, sablono.core sablono.core, w audio-utils.worker, audio-utils.web-audio audio-utils.web-audio, goog.string.format goog.string.format, c audio-utils.chunker}, :uses {timeout cljs.core.async, plot-buffers audio-utils.viz, <! cljs.core.async, linear-distribution audio-utils.viz, sine-wave audio-utils.viz}, :defs {run-test {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-grrwi1/audio_utils/devcards/chunker.cljs", :line 15, :column 7, :end-line 15, :end-column 15, :arglists (quote ([state]))}, :name audio-utils.devcards.chunker/run-test, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-grrwi1/audio_utils/devcards/chunker.cljs", :end-column 15, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, chunker-test {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-grrwi1/audio_utils/devcards/chunker.cljs", :line 53, :column 7, :end-line 53, :end-column 19, :arglists (quote ([state]))}, :name audio-utils.devcards.chunker/chunker-test, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-grrwi1/audio_utils/devcards/chunker.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, devcards.core devcards.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:path :output-channels :buffer-size :sample-rate :else :audio_utils.devcards.chunker :func :name :recur :chunks :documentation :card :main-obj :initial-data :data-fn :processing? :finished? :input-channels :options :input-data :worker :heading}, :order [:processing? :data-fn :worker :buffer-size :input-channels :output-channels :finished? :sample-rate :input-data :chunks :recur :else :path :func :audio_utils.devcards.chunker :card :name :documentation :main-obj :initial-data :options :heading]}, :doc nil}