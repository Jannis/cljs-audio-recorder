;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name audio-utils.worker, :imports nil, :requires nil, :uses nil, :defs {->t_audio_utils$worker7792 {:protocol-inline nil, :meta {:anonymous true, :protocols #{audio-utils.worker/IWorkerAudioNode cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([worker-entry-node next meta7793])), :file nil}, :protocols #{audio-utils.worker/IWorkerAudioNode cljs.core/IMeta cljs.core/IWithMeta}, :name audio-utils.worker/->t_audio_utils$worker7792, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :method-params ([worker-entry-node next meta7793]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 14, :factory :positional, :line 44, :max-fixed-arity 3, :fn-var true, :arglists (quote ([worker-entry-node next meta7793])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, process-audio {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :line 8, :column 4, :end-line 8, :end-column 17, :protocol audio-utils.worker/IWorkerAudioNode, :doc nil, :arglists (quote ([this data]))}, :protocol audio-utils.worker/IWorkerAudioNode, :name audio-utils.worker/process-audio, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :end-column 17, :method-params ([this data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this data])), :doc nil}, t_audio_utils$worker7839 {:num-fields 2, :protocols #{audio-utils.worker/IWorkerAudioNode cljs.core/IMeta cljs.core/IWithMeta}, :name audio-utils.worker/t_audio_utils$worker7839, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :type true, :anonymous true, :column 3, :line 66, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, IWorkerAudioNode {:meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :line 5, :column 14, :end-line 5, :end-column 30, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {connect [[this destination]], disconnect [[this]], process-audio [[this data]]}}}, :protocol-symbol true, :name audio-utils.worker/IWorkerAudioNode, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :end-column 30, :column 1, :line 5, :protocol-info {:methods {connect [[this destination]], disconnect [[this]], process-audio [[this data]]}}, :info nil, :end-line 5, :impls #{audio-utils.worker/t_audio_utils$worker7775 audio-utils.worker/t_audio_utils$worker7792 audio-utils.worker/t_audio_utils$worker7839 audio-utils.worker/t_audio_utils$worker7842}, :doc nil, :jsdoc ("@interface")}, main-entry-node {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :line 10, :column 7, :end-line 10, :end-column 22, :arglists (quote ([worker ctx {:keys [buffer-size input-channels output-channels], :or {buffer-size 4096, input-channels 1, output-channels 1}}])), :doc "Creates a ScriptProcessorNode in the main UI thread that\n   forwards audio to a worker by posting a :worker-process-audio\n   message to it whenever there is new audio to be processed."}, :name audio-utils.worker/main-entry-node, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :end-column 22, :method-params ([worker ctx p__7700]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 3, :fn-var true, :arglists (quote ([worker ctx {:keys [buffer-size input-channels output-channels], :or {buffer-size 4096, input-channels 1, output-channels 1}}])), :doc "Creates a ScriptProcessorNode in the main UI thread that\n   forwards audio to a worker by posting a :worker-process-audio\n   message to it whenever there is new audio to be processed."}, worker-exit-node {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :line 61, :column 7, :end-line 61, :end-column 23, :arglists (quote ([])), :doc "Creates an IWorkerAudioNode that takes audio data from a previous\n   IWorkerAudioNode and forwards it to the main UI thread via a\n   :main-process-audio message."}, :name audio-utils.worker/worker-exit-node, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Creates an IWorkerAudioNode that takes audio data from a previous\n   IWorkerAudioNode and forwards it to the main UI thread via a\n   :main-process-audio message."}, ->t_audio_utils$worker7839 {:protocol-inline nil, :meta {:anonymous true, :protocols #{audio-utils.worker/IWorkerAudioNode cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([worker-exit-node meta7840])), :file nil}, :protocols #{audio-utils.worker/IWorkerAudioNode cljs.core/IMeta cljs.core/IWithMeta}, :name audio-utils.worker/->t_audio_utils$worker7839, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :method-params ([worker-exit-node meta7840]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([worker-exit-node meta7840])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_audio_utils$worker7842 {:protocol-inline nil, :meta {:anonymous true, :protocols #{audio-utils.worker/IWorkerAudioNode cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([worker-exit-node meta7843])), :file nil}, :protocols #{audio-utils.worker/IWorkerAudioNode cljs.core/IMeta cljs.core/IWithMeta}, :name audio-utils.worker/->t_audio_utils$worker7842, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :method-params ([worker-exit-node meta7843]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([worker-exit-node meta7843])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, main-exit-node {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :line 73, :column 7, :end-line 73, :end-column 21, :arglists (quote ([worker data-fn]))}, :name audio-utils.worker/main-exit-node, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :end-column 21, :method-params ([worker data-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 2, :fn-var true, :arglists (quote ([worker data-fn]))}, t_audio_utils$worker7842 {:num-fields 2, :protocols #{audio-utils.worker/IWorkerAudioNode cljs.core/IMeta cljs.core/IWithMeta}, :name audio-utils.worker/t_audio_utils$worker7842, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :type true, :anonymous true, :column 3, :line 66, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, connect {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :line 6, :column 4, :end-line 6, :end-column 11, :protocol audio-utils.worker/IWorkerAudioNode, :doc nil, :arglists (quote ([this destination]))}, :protocol audio-utils.worker/IWorkerAudioNode, :name audio-utils.worker/connect, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :end-column 11, :method-params ([this destination]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this destination])), :doc nil}, t_audio_utils$worker7792 {:num-fields 3, :protocols #{audio-utils.worker/IWorkerAudioNode cljs.core/IMeta cljs.core/IWithMeta}, :name audio-utils.worker/t_audio_utils$worker7792, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :type true, :anonymous true, :column 14, :line 44, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_audio_utils$worker7775 {:num-fields 3, :protocols #{audio-utils.worker/IWorkerAudioNode cljs.core/IMeta cljs.core/IWithMeta}, :name audio-utils.worker/t_audio_utils$worker7775, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :type true, :anonymous true, :column 14, :line 44, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_audio_utils$worker7775 {:protocol-inline nil, :meta {:anonymous true, :protocols #{audio-utils.worker/IWorkerAudioNode cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([worker-entry-node next meta7776])), :file nil}, :protocols #{audio-utils.worker/IWorkerAudioNode cljs.core/IMeta cljs.core/IWithMeta}, :name audio-utils.worker/->t_audio_utils$worker7775, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :method-params ([worker-entry-node next meta7776]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 14, :factory :positional, :line 44, :max-fixed-arity 3, :fn-var true, :arglists (quote ([worker-entry-node next meta7776])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, worker-entry-node {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :line 37, :column 7, :end-line 37, :end-column 24, :arglists (quote ([])), :doc "Creates an IWorkerAudioNode in a worker that receives its audio\n   data from the main UI thread via a :worker-process-audio message.\n   It then forwards the audio to the next IWorkerAudioNode if\n   there is one."}, :name audio-utils.worker/worker-entry-node, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Creates an IWorkerAudioNode in a worker that receives its audio\n   data from the main UI thread via a :worker-process-audio message.\n   It then forwards the audio to the next IWorkerAudioNode if\n   there is one."}, disconnect {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :line 7, :column 4, :end-line 7, :end-column 14, :protocol audio-utils.worker/IWorkerAudioNode, :doc nil, :arglists (quote ([this]))}, :protocol audio-utils.worker/IWorkerAudioNode, :name audio-utils.worker/disconnect, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/worker.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:output-channels :buffer-size meta7843 meta7776 :name worker-exit-node :worker-process-audio meta7840 :input-channels :main-process-audio worker-entry-node quote next :arglists meta7793 :doc :data}, :order [:buffer-size :input-channels :output-channels :name :data :worker-process-audio worker-entry-node :arglists :doc quote next meta7776 meta7793 :main-process-audio worker-exit-node meta7840 meta7843]}, :doc nil}