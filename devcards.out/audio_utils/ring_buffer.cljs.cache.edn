;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name audio-utils.ring-buffer, :imports nil, :requires {audio-utils.util audio-utils.util}, :uses {aderef audio-utils.util, aswap! audio-utils.util, aatom audio-utils.util}, :defs {IBufferSize {:meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/ring_buffer.cljs", :line 4, :column 14, :end-line 4, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {buffer-size [[this]]}}}, :protocol-symbol true, :name audio-utils.ring-buffer/IBufferSize, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/ring_buffer.cljs", :end-column 25, :column 1, :line 4, :protocol-info {:methods {buffer-size [[this]]}}, :info nil, :end-line 4, :impls #{audio-utils.ring-buffer/RingBuffer}, :doc nil, :jsdoc ("@interface")}, buffer-size {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/ring_buffer.cljs", :line 5, :column 4, :end-line 5, :end-column 15, :protocol audio-utils.ring-buffer/IBufferSize, :doc nil, :arglists (quote ([this]))}, :protocol audio-utils.ring-buffer/IBufferSize, :name audio-utils.ring-buffer/buffer-size, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/ring_buffer.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, RingBuffer {:num-fields 4, :protocols #{audio-utils.ring-buffer/IBufferSize cljs.core/IEquiv cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IStack cljs.core/ISequential cljs.core/IWithMeta}, :name audio-utils.ring-buffer/RingBuffer, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/ring_buffer.cljs", :end-column 20, :type true, :column 10, :line 7, :record false, :end-line 7, :skip-protocol-flag #{cljs.core/IEquiv cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IStack cljs.core/ISequential cljs.core/IWithMeta}}, ->RingBuffer {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/ring_buffer.cljs", :line 7, :column 10, :end-line 7, :end-column 20, :protocols #{audio-utils.ring-buffer/IBufferSize cljs.core/IEquiv cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IStack cljs.core/ISequential cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IEquiv cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IStack cljs.core/ISequential cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([start length samples meta]))}, :protocols #{audio-utils.ring-buffer/IBufferSize cljs.core/IEquiv cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IStack cljs.core/ISequential cljs.core/IWithMeta}, :name audio-utils.ring-buffer/->RingBuffer, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/ring_buffer.cljs", :end-column 20, :method-params ([start length samples meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :line 7, :end-line 7, :max-fixed-arity 4, :fn-var true, :arglists (quote ([start length samples meta])), :skip-protocol-flag #{cljs.core/IEquiv cljs.core/ICollection cljs.core/IEmptyableCollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IStack cljs.core/ISequential cljs.core/IWithMeta}}, ring-buffer {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/ring_buffer.cljs", :line 67, :column 7, :end-line 67, :end-column 18, :arglists (quote ([size]))}, :name audio-utils.ring-buffer/ring-buffer, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/Work/vimsical/cljs-audio-utils/eue/-rcsl8f/audio_utils/ring_buffer.cljs", :end-column 18, :method-params ([size]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{samples meta > start size length}, :order [start length samples meta > size]}, :doc nil}